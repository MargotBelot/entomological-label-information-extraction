[project]
name = "entomological-label-information-extraction"
version = "1.0.0"
description = "AI-powered framework for semi-automated processing of entomological specimen labels"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["entomology", "machine-learning", "ocr", "computer-vision", "tensorflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing"
]

dependencies = [
        "cer==1.2.0",
        "deskew==1.5.1",
        "detecto==1.2.2",
        "Flask==3.1.0",
        "Flask-Cors==4.0.0",
        "gensim>=4.3.0",
        "google-cloud-vision==3.7.2",
        "jiwer==3.0.3",
        "kaleido==0.2.1",
        "keras>=2.16.0",
        "matplotlib>=3.8.0",
        "nltk==3.8.1",
        "numpy>=1.26.0",
        "opencv-python==4.9.0.80",
        "pandas>=2.2.0",
        "pillow>=10.0.0",
        "plotly==5.20.0",
        "plotly-express==0.4.1",
        "pyopenssl",
        "pytesseract==0.3.10",
        "regex>=2023.12.0",
        "renku-sphinx-theme==0.4.0",
        "scikit-learn>=1.4.0",
        "seaborn==0.13.2",
        "scipy>=1.11.0",
        "Sphinx==7.4.7",
        "sphinx-rtd-theme==0.5.1",
        "tensorflow>=2.16.0",
        "tesseract==0.1.3",
        "torch>=2.2.0",
        "torchvision>=0.17.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "flake8>=6.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.0",
    "pre-commit>=3.0"
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "tensorflow-cpu>=2.16.0",
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "numpy>=1.26.0",
    "pandas>=2.2.0",
    "matplotlib>=3.8.0",
    "scikit-learn>=1.4.0",
    "opencv-python-headless>=4.9.0",
    "pillow>=10.0.0",
    "nltk>=3.8.0",
    "pytesseract>=0.3.10",
    "Flask>=3.1.0"
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
    "myst-parser>=2.0"
]

[tool.setuptools.packages.find]
where = ["."]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | models
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "unit_tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]
markers = [
    "slow: marks tests as slow (deselect with '-m not slow')",
    "integration: marks tests as integration tests"
]
filterwarnings = [
    "ignore::UserWarning:torchvision.*",
    "ignore:The parameter 'pretrained' is deprecated.*:UserWarning",
    "ignore:Arguments other than a weight enum.*:UserWarning",
    "ignore::urllib3.exceptions.NotOpenSSLWarning",
    "ignore::pandas.errors.SettingWithCopyWarning",
    "ignore:urllib3 v2 only supports OpenSSL.*:urllib3.exceptions.NotOpenSSLWarning"
]

[tool.coverage.run]
source = ["label_processing", "label_postprocessing", "label_evaluation", "pipelines"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/models/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
